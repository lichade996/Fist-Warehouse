# 存储学生信息的字典，键为学号，值为包含姓名的字典
students = {}
# 存储学生成绩的字典，键为学号，值为包含课程成绩的字典
scores = {}


def add_student():
    student_id = input("请输入学生学号: ")
    student_name = input("请输入学生姓名: ")
    students[student_id] = {"name": student_name}
    scores[student_id] = {}
    print(f"学生 {student_name}（学号：{student_id}）添加成功！")


def input_scores():
    student_id = input("请输入学生学号: ")
    if student_id in students:
        course = input("请输入课程名称: ")
        score = float(input("请输入该课程成绩: "))
        scores[student_id][course] = score
        print(f"学生 {students[student_id]['name']} 的 {course} 成绩录入成功！")
    else:
        print("该学号的学生不存在，请先添加学生信息。")


def query_scores():
    student_id = input("请输入学生学号: ")
    if student_id in scores:
        print(f"学生 {students[student_id]['name']} 的成绩如下:")
        total_score = 0
        course_count = 0
        for course, score in scores[student_id].items():
            print(f"{course}: {score}")
            total_score += score
            course_count += 1
        average_score = total_score / course_count if course_count > 0 else 0
        print(f"平均成绩: {average_score}")
    else:
        print("该学号的学生成绩不存在，请先录入成绩。")


def main():
    while True:
        print("请选择操作：")
        print("1. 添加学生信息")
        print("2. 录入成绩")
        print("3. 查询学生成绩")
        print("4. 退出系统")
        choice = input("请输入选项(1/2/3/4): ")
        if choice == "1":
            add_student()
        elif choice == "2":
            input_scores()
        elif choice == "3":
            query_scores()
        elif choice == "4":
            print("感谢使用，系统退出！")
            break
        else:
            print("无效的选项，请重新输入。")


if __name__ == "__main__":
    main()